<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Неоновый Кликер</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
            user-select: none;
        }
        
        body {
            background: linear-gradient(135deg, #0f0c29, #302b63, #24243e);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            overflow-x: hidden;
            position: relative;
        }
        
        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 30%, rgba(255, 0, 255, 0.1) 0%, transparent 40%),
                radial-gradient(circle at 80% 70%, rgba(0, 255, 255, 0.1) 0%, transparent 40%),
                radial-gradient(circle at 50% 20%, rgba(255, 255, 0, 0.1) 0%, transparent 40%);
            z-index: -1;
            animation: backgroundAnimation 20s infinite linear;
        }
        
        @keyframes backgroundAnimation {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .container {
            width: 90%;
            max-width: 1200px;
            min-height: 90vh;
            background: rgba(15, 15, 40, 0.7);
            border-radius: 20px;
            box-shadow: 0 0 30px rgba(0, 200, 255, 0.5);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(100, 200, 255, 0.3);
            padding: 20px;
            display: flex;
            flex-direction: column;
            overflow: hidden;
            position: relative;
        }
        
        .container::before {
            content: '';
            position: absolute;
            top: -10px;
            left: -10px;
            right: -10px;
            bottom: -10px;
            background: linear-gradient(45deg, #ff00cc, #3333ff, #00ccff, #ff00cc);
            z-index: -1;
            border-radius: 30px;
            animation: borderAnimation 4s linear infinite;
            background-size: 400% 400%;
        }
        
        @keyframes borderAnimation {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
            border-bottom: 1px solid rgba(0, 200, 255, 0.3);
            margin-bottom: 20px;
        }
        
        .logo {
            font-size: 28px;
            font-weight: bold;
            background: linear-gradient(90deg, #ff00cc, #3333ff, #00ccff);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-shadow: 0 0 10px rgba(0, 200, 255, 0.5);
        }
        
        .user-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .coin-display {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 18px;
            padding: 8px 15px;
            background: rgba(0, 30, 60, 0.7);
            border-radius: 50px;
            border: 1px solid rgba(0, 200, 255, 0.5);
            box-shadow: 0 0 10px rgba(0, 200, 255, 0.3);
            animation: coinGlow 3s infinite alternate;
        }
        
        @keyframes coinGlow {
            0% { box-shadow: 0 0 10px rgba(0, 200, 255, 0.3); }
            100% { box-shadow: 0 0 20px rgba(0, 200, 255, 0.7), 0 0 30px rgba(0, 100, 255, 0.5); }
        }
        
        .coin-count {
            color: #ffcc00;
            font-weight: bold;
            animation: colorChange 5s infinite alternate;
        }
        
        @keyframes colorChange {
            0% { color: #ffcc00; }
            25% { color: #00ffcc; }
            50% { color: #cc00ff; }
            75% { color: #ff0066; }
            100% { color: #00ccff; }
        }
        
        .prestige-count {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 18px;
            padding: 8px 15px;
            background: rgba(60, 0, 60, 0.7);
            border-radius: 50px;
            border: 1px solid rgba(255, 0, 255, 0.5);
            box-shadow: 0 0 10px rgba(255, 0, 255, 0.3);
        }
        
        .main-content {
            display: flex;
            flex: 1;
            gap: 20px;
        }
        
        .clicker-section {
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .click-button {
            width: 250px;
            height: 250px;
            border-radius: 50%;
            background: linear-gradient(145deg, #ff00cc, #3333ff);
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 32px;
            font-weight: bold;
            color: white;
            cursor: pointer;
            border: 5px solid rgba(255, 255, 255, 0.3);
            box-shadow: 
                0 0 30px rgba(255, 0, 200, 0.7),
                inset 0 0 20px rgba(255, 255, 255, 0.5);
            transition: transform 0.1s, box-shadow 0.3s;
            position: relative;
            overflow: hidden;
        }
        
        .click-button::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transform: rotate(45deg);
            animation: shine 3s infinite linear;
        }
        
        @keyframes shine {
            0% { transform: rotate(45deg) translateX(-100%); }
            100% { transform: rotate(45deg) translateX(100%); }
        }
        
        .click-button:active {
            transform: scale(0.95);
            box-shadow: 
                0 0 40px rgba(255, 0, 200, 0.9),
                inset 0 0 25px rgba(255, 255, 255, 0.7);
        }
        
        .click-power {
            margin-top: 20px;
            font-size: 20px;
            text-align: center;
            background: rgba(0, 0, 0, 0.3);
            padding: 10px 20px;
            border-radius: 50px;
            border: 1px solid rgba(0, 200, 255, 0.5);
        }
        
        .shop-section {
            width: 300px;
            background: rgba(0, 10, 30, 0.6);
            border-radius: 15px;
            padding: 15px;
            border: 1px solid rgba(0, 200, 255, 0.3);
            box-shadow: 0 0 15px rgba(0, 200, 255, 0.3);
        }
        
        .shop-title {
            text-align: center;
            font-size: 24px;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid rgba(0, 200, 255, 0.3);
            color: #00ccff;
            text-shadow: 0 0 10px rgba(0, 200, 255, 0.7);
        }
        
        .shop-items {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        
        .shop-item {
            background: rgba(20, 20, 50, 0.7);
            border-radius: 10px;
            padding: 12px;
            border: 1px solid rgba(0, 200, 255, 0.3);
            transition: transform 0.2s, box-shadow 0.2s;
            cursor: pointer;
        }
        
        .shop-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 200, 255, 0.4);
            background: rgba(30, 30, 70, 0.8);
        }
        
        .item-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
        }
        
        .item-name {
            font-size: 18px;
            color: #00ccff;
            font-weight: bold;
        }
        
        .item-cost {
            display: flex;
            align-items: center;
            gap: 5px;
            color: #ffcc00;
            font-weight: bold;
        }
        
        .item-level {
            font-size: 14px;
            color: #aaa;
        }
        
        .item-effect {
            font-size: 14px;
            color: #ccc;
        }
        
        .prestige-section {
            margin-top: 20px;
            padding: 15px;
            background: rgba(30, 0, 30, 0.6);
            border-radius: 15px;
            border: 1px solid rgba(255, 0, 255, 0.3);
            box-shadow: 0 0 15px rgba(255, 0, 255, 0.3);
        }
        
        .prestige-title {
            text-align: center;
            font-size: 22px;
            margin-bottom: 10px;
            color: #ff00cc;
            text-shadow: 0 0 10px rgba(255, 0, 200, 0.7);
        }
        
        .prestige-button {
            width: 100%;
            padding: 12px;
            background: linear-gradient(90deg, #ff00cc, #cc00ff);
            border: none;
            border-radius: 50px;
            color: white;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
            margin-top: 10px;
            box-shadow: 0 0 15px rgba(255, 0, 200, 0.5);
        }
        
        .prestige-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 20px rgba(255, 0, 200, 0.7);
        }
        
        .prestige-button:disabled {
            background: linear-gradient(90deg, #555, #888);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .prestige-info {
            font-size: 14px;
            text-align: center;
            margin-top: 10px;
            color: #aaa;
        }
        
        .auth-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            background: rgba(0, 5, 15, 0.9);
            z-index: 100;
            backdrop-filter: blur(5px);
        }
        
        .auth-box {
            background: rgba(15, 15, 40, 0.9);
            border-radius: 20px;
            padding: 30px;
            width: 90%;
            max-width: 400px;
            text-align: center;
            box-shadow: 0 0 40px rgba(0, 200, 255, 0.5);
            border: 1px solid rgba(0, 200, 255, 0.5);
        }
        
        .auth-title {
            font-size: 28px;
            margin-bottom: 20px;
            color: #00ccff;
            text-shadow: 0 0 10px rgba(0, 200, 255, 0.7);
        }
        
        .auth-tabs {
            display: flex;
            margin-bottom: 20px;
        }
        
        .auth-tab {
            flex: 1;
            padding: 10px;
            background: rgba(30, 30, 60, 0.7);
            cursor: pointer;
            border-bottom: 2px solid transparent;
        }
        
        .auth-tab.active {
            border-bottom: 2px solid #00ccff;
            background: rgba(40, 40, 80, 0.9);
        }
        
        .auth-form {
            display: none;
        }
        
        .auth-form.active {
            display: block;
        }
        
        .auth-input {
            width: 100%;
            padding: 12px;
            margin-bottom: 15px;
            background: rgba(10, 10, 30, 0.7);
            border: 1px solid rgba(0, 200, 255, 0.5);
            border-radius: 5px;
            color: white;
            font-size: 16px;
        }
        
        .auth-input:focus {
            outline: none;
            border-color: #00ccff;
            box-shadow: 0 0 10px rgba(0, 200, 255, 0.5);
        }
        
        .auth-button {
            width: 100%;
            padding: 12px;
            background: linear-gradient(90deg, #00ccff, #0066ff);
            border: none;
            border-radius: 50px;
            color: white;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
            margin-top: 10px;
        }
        
        .auth-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 200, 255, 0.7);
        }
        
        .bonus-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 25px;
            background: rgba(0, 60, 0, 0.8);
            border-radius: 10px;
            border: 1px solid rgba(0, 255, 100, 0.5);
            box-shadow: 0 0 15px rgba(0, 255, 100, 0.5);
            animation: slideIn 0.5s, fadeOut 0.5s 2.5s forwards;
        }
        
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        @keyframes fadeOut {
            from { opacity: 1; }
            to { opacity: 0; }
        }
        
        .referral-section {
            margin-top: 20px;
            padding: 15px;
            background: rgba(0, 30, 60, 0.6);
            border-radius: 15px;
            border: 1px solid rgba(0, 200, 255, 0.3);
        }
        
        .referral-title {
            text-align: center;
            font-size: 18px;
            margin-bottom: 10px;
            color: #00ccff;
        }
        
        .referral-link {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }
        
        .referral-input {
            flex: 1;
            padding: 8px;
            background: rgba(10, 10, 30, 0.7);
            border: 1px solid rgba(0, 200, 255, 0.5);
            border-radius: 5px;
            color: white;
        }
        
        .copy-button {
            padding: 8px 15px;
            background: linear-gradient(90deg, #00ccff, #0066ff);
            border: none;
            border-radius: 5px;
            color: white;
            cursor: pointer;
        }
        
        .new-feature {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(255, 0, 200, 0.7); }
            70% { transform: scale(1.05); box-shadow: 0 0 0 15px rgba(255, 0, 200, 0); }
            100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(255, 0, 200, 0); }
        }
        
        @media (max-width: 768px) {
            .main-content {
                flex-direction: column;
            }
            
            .shop-section {
                width: 100%;
            }
            
            .click-button {
                width: 200px;
                height: 200px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="logo">Неоновый Кликер</div>
            <div class="user-info">
                <div class="coin-display">
                    <i class="fas fa-coins"></i>
                    <span class="coin-count">0</span>
                </div>
                <div class="prestige-count">
                    <i class="fas fa-crown"></i>
                    <span class="prestige">0</span>
                </div>
            </div>
        </header>
        
        <div class="main-content">
            <div class="clicker-section">
                <div class="click-button" id="clickButton">
                    Кликай!
                </div>
                <div class="click-power">
                    Сила клика: <span id="clickPower">1</span> монет
                </div>
            </div>
            
            <div class="shop-section">
                <div class="shop-title">Магазин Улучшений</div>
                <div class="shop-items" id="shopItems">
                    <!-- Shop items will be added here dynamically -->
                </div>
                
                <div class="prestige-section">
                    <div class="prestige-title">Система Престижа</div>
                    <button class="prestige-button" id="prestigeButton" disabled>
                        Престиж (0)
                    </button>
                    <div class="prestige-info">
                        Сбросит все улучшения и даст +1 престиж, увеличивающий доход
                    </div>
                </div>
                
                <div class="referral-section">
                    <div class="referral-title">Реферальная система</div>
                    <p>Поделись ссылкой и получи 100.000 монет при регистрации друга!</p>
                    <div class="referral-link">
                        <input type="text" class="referral-input" id="referralLink" value="https://clicker-game.com?ref=username" readonly>
                        <button class="copy-button" id="copyButton">Копировать</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="auth-container" id="authContainer">
        <div class="auth-box">
            <div class="auth-title">Неоновый Кликер</div>
            
            <div class="auth-tabs">
                <div class="auth-tab active" id="loginTab">Вход</div>
                <div class="auth-tab" id="registerTab">Регистрация</div>
            </div>
            
            <div class="auth-form active" id="loginForm">
                <input type="text" class="auth-input" id="loginUsername" placeholder="Логин">
                <input type="password" class="auth-input" id="loginPassword" placeholder="Пароль">
                <button class="auth-button" id="loginButton">Войти</button>
            </div>
            
            <div class="auth-form" id="registerForm">
                <input type="text" class="auth-input" id="registerUsername" placeholder="Логин">
                <input type="password" class="auth-input" id="registerPassword" placeholder="Пароль">
                <input type="password" class="auth-input" id="registerConfirm" placeholder="Повторите пароль">
                <button class="auth-button" id="registerButton">Зарегистрироваться</button>
            </div>
        </div>
    </div>
    
    <div class="bonus-notification" id="bonusNotification" style="display: none;">
        Вы получили 100.000 монет за реферала!
    </div>

    <script>
        // Game state
        const gameState = {
            coins: 0,
            clickPower: 1,
            prestige: 0,
            items: {
                power1: { name: "Усиленный Клик", cost: 50, power: 2, level: 0 },
                power2: { name: "Мега Клик", cost: 500, power: 10, level: 0 },
                autoClicker: { name: "Автокликер", cost: 1000, power: 1, level: 0 },
                power3: { name: "Ультра Клик", cost: 5000, power: 50, level: 0 },
                power4: { name: "Квантовый Клик", cost: 20000, power: 200, level: 0 },
                power5: { name: "Космический Клик", cost: 100000, power: 1000, level: 0 }
            },
            autoClickerInterval: null
        };
        
        // DOM elements
        const authContainer = document.getElementById('authContainer');
        const loginTab = document.getElementById('loginTab');
        const registerTab = document.getElementById('registerTab');
        const loginForm = document.getElementById('loginForm');
        const registerForm = document.getElementById('registerForm');
        const loginButton = document.getElementById('loginButton');
        const registerButton = document.getElementById('registerButton');
        const clickButton = document.getElementById('clickButton');
        const coinCount = document.querySelector('.coin-count');
        const clickPower = document.getElementById('clickPower');
        const shopItems = document.getElementById('shopItems');
        const prestigeButton = document.getElementById('prestigeButton');
        const prestigeCount = document.querySelector('.prestige');
        const referralLink = document.getElementById('referralLink');
        const copyButton = document.getElementById('copyButton');
        const bonusNotification = document.getElementById('bonusNotification');
        
        // User database simulation
        let users = JSON.parse(localStorage.getItem('clickerUsers')) || {};
        let currentUser = null;
        
        // Check if user is logged in
        const loggedInUser = localStorage.getItem('loggedInUser');
        if (loggedInUser && users[loggedInUser]) {
            currentUser = loggedInUser;
            loadGame();
            authContainer.style.display = 'none';
        }
        
        // Tab switching
        loginTab.addEventListener('click', () => {
            loginTab.classList.add('active');
            registerTab.classList.remove('active');
            loginForm.classList.add('active');
            registerForm.classList.remove('active');
        });
        
        registerTab.addEventListener('click', () => {
            registerTab.classList.add('active');
            loginTab.classList.remove('active');
            registerForm.classList.add('active');
            loginForm.classList.remove('active');
        });
        
        // Login function
        loginButton.addEventListener('click', () => {
            const username = document.getElementById('loginUsername').value;
            const password = document.getElementById('loginPassword').value;
            
            if (!username || !password) {
                alert('Заполните все поля!');
                return;
            }
            
            if (users[username] && users[username].password === password) {
                currentUser = username;
                localStorage.setItem('loggedInUser', username);
                loadGame();
                authContainer.style.display = 'none';
                
                // Apply referral bonus if needed
                applyReferralBonus();
            } else {
                alert('Неверный логин или пароль!');
            }
        });
        
        // Register function
        registerButton.addEventListener('click', () => {
            const username = document.getElementById('registerUsername').value;
            const password = document.getElementById('registerPassword').value;
            const confirm = document.getElementById('registerConfirm').value;
            
            if (!username || !password || !confirm) {
                alert('Заполните все поля!');
                return;
            }
            
            if (password !== confirm) {
                alert('Пароли не совпадают!');
                return;
            }
            
            if (users[username]) {
                alert('Пользователь с таким именем уже существует!');
                return;
            }
            
            // Create new user
            users[username] = {
                password: password,
                gameState: JSON.parse(JSON.stringify(gameState)) // Deep copy
            };
            
            localStorage.setItem('clickerUsers', JSON.stringify(users));
            alert('Регистрация успешна! Теперь войдите в систему.');
            
            // Switch to login tab
            loginTab.click();
        });
        
        // Click button functionality
        clickButton.addEventListener('click', () => {
            gameState.coins += gameState.clickPower;
            updateUI();
            saveGame();
            
            // Create coin effect
            createCoinEffect();
        });
        
        // Copy referral link
        copyButton.addEventListener('click', () => {
            referralLink.select();
            document.execCommand('copy');
            alert('Ссылка скопирована в буфер обмена!');
        });
        
        // Prestige functionality
        prestigeButton.addEventListener('click', () => {
            if (gameState.coins >= 1000000) {
                gameState.prestige += 1;
                gameState.coins = 0;
                gameState.clickPower = 1;
                
                // Reset items
                for (const item in gameState.items) {
                    gameState.items[item].level = 0;
                }
                
                // Add new feature on prestige
                if (gameState.prestige === 1) {
                    gameState.items.power6 = { 
                        name: "Престиж Клик", 
                        cost: 500000, 
                        power: 5000, 
                        level: 0,
                        isNew: true
                    };
                }
                
                updateUI();
                saveGame();
                updateShopItems();
                
                // Show new feature animation
                if (gameState.prestige === 1) {
                    const newItem = document.querySelector('.shop-item:last-child');
                    newItem.classList.add('new-feature');
                    setTimeout(() => newItem.classList.remove('new-feature'), 5000);
                }
            }
        });
        
        // Create coin effect
        function createCoinEffect() {
            const coin = document.createElement('div');
            coin.innerHTML = '<i class="fas fa-coins"></i>';
            coin.style.position = 'absolute';
            coin.style.color = '#ffcc00';
            coin.style.fontSize = '20px';
            coin.style.opacity = '1';
            coin.style.pointerEvents = 'none';
            
            const rect = clickButton.getBoundingClientRect();
            const x = rect.left + rect.width / 2;
            const y = rect.top + rect.height / 2;
            
            coin.style.left = `${x}px`;
            coin.style.top = `${y}px`;
            
            document.body.appendChild(coin);
            
            // Animation
            const animation = coin.animate([
                { transform: 'translate(0, 0)', opacity: 1 },
                { transform: `translate(${Math.random() * 100 - 50}px, ${Math.random() * -100 - 50}px)`, opacity: 0 }
            ], {
                duration: 1000,
                easing: 'ease-out'
            });
            
            animation.onfinish = () => {
                document.body.removeChild(coin);
            };
        }
        
        // Update UI
        function updateUI() {
            coinCount.textContent = formatNumber(gameState.coins);
            clickPower.textContent = formatNumber(gameState.clickPower);
            prestigeCount.textContent = gameState.prestige;
            
            // Update prestige button
            if (gameState.coins >= 1000000) {
                prestigeButton.disabled = false;
                prestigeButton.textContent = `Престиж (${gameState.prestige + 1})`;
            } else {
                prestigeButton.disabled = true;
                prestigeButton.textContent = `Престиж (${gameState.prestige}) - Требуется 1.000.000 монет`;
            }
            
            // Update referral link
            if (currentUser) {
                referralLink.value = `${window.location.origin}${window.location.pathname}?ref=${currentUser}`;
            }
        }
        
        // Format large numbers
        function formatNumber(num) {
            if (num >= 1000000) {
                return (num / 1000000).toFixed(2) + 'M';
            }
            if (num >= 1000) {
                return (num / 1000).toFixed(1) + 'K';
            }
            return num;
        }
        
        // Create shop items
        function createShopItems() {
            shopItems.innerHTML = '';
            
            for (const itemId in gameState.items) {
                const item = gameState.items[itemId];
                const itemElement = document.createElement('div');
                itemElement.className = 'shop-item';
                if (item.isNew) itemElement.classList.add('new-feature');
                
                itemElement.innerHTML = `
                    <div class="item-header">
                        <div class="item-name">${item.name}</div>
                        <div class="item-cost"><i class="fas fa-coins"></i>${formatNumber(item.cost)}</div>
                    </div>
                    <div class="item-level">Уровень: ${item.level}</div>
                    <div class="item-effect">+${formatNumber(item.power)} к силе клика</div>
                `;
                
                itemElement.addEventListener('click', () => {
                    if (gameState.coins >= item.cost) {
                        gameState.coins -= item.cost;
                        gameState.clickPower += item.power;
                        item.level += 1;
                        item.cost = Math.floor(item.cost * 1.5);
                        
                        updateUI();
                        saveGame();
                        
                        // Update item in shop
                        itemElement.querySelector('.item-cost').innerHTML = `<i class="fas fa-coins"></i>${formatNumber(item.cost)}`;
                        itemElement.querySelector('.item-level').textContent = `Уровень: ${item.level}`;
                    } else {
                        // Shake animation for insufficient funds
                        itemElement.animate([
                            { transform: 'translateX(0)' },
                            { transform: 'translateX(-10px)' },
                            { transform: 'translateX(10px)' },
                            { transform: 'translateX(0)' }
                        ], {
                            duration: 300
                        });
                    }
                });
                
                shopItems.appendChild(itemElement);
            }
        }
        
        // Save game
        function saveGame() {
            if (currentUser) {
                users[currentUser].gameState = JSON.parse(JSON.stringify(gameState));
                localStorage.setItem('clickerUsers', JSON.stringify(users));
            }
        }
        
        // Load game
        function loadGame() {
            if (currentUser && users[currentUser]) {
                const savedState = users[currentUser].gameState;
                Object.assign(gameState, savedState);
                
                // Initialize autoclicker
                initAutoClicker();
                
                updateUI();
                createShopItems();
            }
        }
        
        // Initialize autoclicker
        function initAutoClicker() {
            if (gameState.autoClickerInterval) {
                clearInterval(gameState.autoClickerInterval);
            }
            
            const autoClickerLevel = gameState.items.autoClicker.level;
            if (autoClickerLevel > 0) {
                const power = gameState.items.autoClicker.power * autoClickerLevel;
                gameState.autoClickerInterval = setInterval(() => {
                    gameState.coins += power;
                    updateUI();
                    saveGame();
                }, 1000);
            }
        }
        
        // Apply referral bonus
        function applyReferralBonus() {
            const urlParams = new URLSearchParams(window.location.search);
            const ref = urlParams.get('ref');
            
            if (ref && ref !== currentUser && users[ref]) {
                // Apply bonus only once
                if (!localStorage.getItem('refBonusApplied')) {
                    gameState.coins += 100000;
                    updateUI();
                    saveGame();
                    
                    // Show notification
                    bonusNotification.style.display = 'block';
                    setTimeout(() => {
                        bonusNotification.style.display = 'none';
                    }, 3000);
                    
                    // Set flag to prevent reapplying
                    localStorage.setItem('refBonusApplied', 'true');
                }
            }
        }
        
        // Initialize shop
        createShopItems();
        
        // Auto-save every 30 seconds
        setInterval(saveGame, 30000);
    </script>
</body>
</html>
